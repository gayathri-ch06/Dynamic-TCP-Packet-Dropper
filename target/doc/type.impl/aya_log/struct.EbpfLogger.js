(function() {
    var type_impls = Object.fromEntries([["aya_log",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EbpfLogger\" class=\"impl\"><a class=\"src rightside\" href=\"src/aya_log/lib.rs.html#103-182\">Source</a><a href=\"#impl-EbpfLogger\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"aya_log/struct.EbpfLogger.html\" title=\"struct aya_log::EbpfLogger\">EbpfLogger</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.init\" class=\"method\"><a class=\"src rightside\" href=\"src/aya_log/lib.rs.html#106-108\">Source</a><h4 class=\"code-header\">pub fn <a href=\"aya_log/struct.EbpfLogger.html#tymethod.init\" class=\"fn\">init</a>(bpf: &amp;mut <a class=\"struct\" href=\"aya/bpf/struct.Ebpf.html\" title=\"struct aya::bpf::Ebpf\">Ebpf</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"aya_log/struct.EbpfLogger.html\" title=\"struct aya_log::EbpfLogger\">EbpfLogger</a>, <a class=\"enum\" href=\"aya_log/enum.Error.html\" title=\"enum aya_log::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Starts reading log records created with <code>aya-log-ebpf</code> and logs them\nwith the default logger. See <a href=\"log/fn.logger.html\" title=\"fn log::logger\">log::logger</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_with_logger\" class=\"method\"><a class=\"src rightside\" href=\"src/aya_log/lib.rs.html#112-119\">Source</a><h4 class=\"code-header\">pub fn <a href=\"aya_log/struct.EbpfLogger.html#tymethod.init_with_logger\" class=\"fn\">init_with_logger</a>&lt;T: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> + 'static&gt;(\n    bpf: &amp;mut <a class=\"struct\" href=\"aya/bpf/struct.Ebpf.html\" title=\"struct aya::bpf::Ebpf\">Ebpf</a>,\n    logger: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"aya_log/struct.EbpfLogger.html\" title=\"struct aya_log::EbpfLogger\">EbpfLogger</a>, <a class=\"enum\" href=\"aya_log/enum.Error.html\" title=\"enum aya_log::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Starts reading log records created with <code>aya-log-ebpf</code> and logs them\nwith the given logger.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_from_id\" class=\"method\"><a class=\"src rightside\" href=\"src/aya_log/lib.rs.html#125-127\">Source</a><h4 class=\"code-header\">pub fn <a href=\"aya_log/struct.EbpfLogger.html#tymethod.init_from_id\" class=\"fn\">init_from_id</a>(program_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"aya_log/struct.EbpfLogger.html\" title=\"struct aya_log::EbpfLogger\">EbpfLogger</a>, <a class=\"enum\" href=\"aya_log/enum.Error.html\" title=\"enum aya_log::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attaches to an existing <code>aya-log-ebpf</code> instance.</p>\n<p>Attaches to the logs produced by <code>program_id</code>. Can be used to read logs generated by a\npinned program. The log records will be written to the default logger. See <a href=\"log/fn.logger.html\" title=\"fn log::logger\">log::logger</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_from_id_with_logger\" class=\"method\"><a class=\"src rightside\" href=\"src/aya_log/lib.rs.html#133-158\">Source</a><h4 class=\"code-header\">pub fn <a href=\"aya_log/struct.EbpfLogger.html#tymethod.init_from_id_with_logger\" class=\"fn\">init_from_id_with_logger</a>&lt;T: <a class=\"trait\" href=\"log/trait.Log.html\" title=\"trait log::Log\">Log</a> + 'static&gt;(\n    program_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    logger: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"aya_log/struct.EbpfLogger.html\" title=\"struct aya_log::EbpfLogger\">EbpfLogger</a>, <a class=\"enum\" href=\"aya_log/enum.Error.html\" title=\"enum aya_log::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attaches to an existing <code>aya-log-ebpf</code> instance and logs with the given logger.</p>\n<p>Attaches to the logs produced by <code>program_id</code>. Can be used to read logs generated by a\npinned program. The log records will be written to the given logger.</p>\n</div></details></div></details>",0,"aya_log::BpfLogger"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[5026]}