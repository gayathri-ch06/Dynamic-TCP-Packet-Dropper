searchState.loadedDescShard("log4rs", 0, "log4rs is a highly configurable logging framework modeled …\nA handle to the active logger.\nThe fully configured log4rs Logger which is appropriate to …\nAppenders\nAll things pertaining to log4rs config.\nEncoders\nFilters\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the max log level above which everything will be …\nCreate a new <code>Logger</code> given a configuration.\nCreate a new <code>Logger</code> given a configuration and err handler.\nSets the logging configuration.\nA trait implemented by log4rs appenders.\nConfiguration for an appender.\nProcesses the provided <code>Record</code>.\nThe appender configuration.\nThe console appender.\nThe file appender.\nThe filters attached to the appender.\nFlushes all in-flight records.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe appender kind.\nA rolling file appender.\nAn appender which logs to standard out.\nA builder for <code>ConsoleAppender</code>s.\nThe console appender’s configuration.\nA deserializer for the <code>ConsoleAppender</code>.\nStandard error.\nStandard output.\nThe stream to log to.\nConsumes the <code>ConsoleAppenderBuilder</code>, producing a …\nCreates a new <code>ConsoleAppender</code> builder.\nSets the output encoder for the <code>ConsoleAppender</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the output stream to log to.\nSets the output to log only when it’s a TTY.\nAn appender which logs to a file.\nA builder for <code>FileAppender</code>s.\nThe file appender’s configuration.\nA deserializer for the <code>FileAppender</code>.\nDetermines if the appender will append to or truncate the …\nConsumes the <code>FileAppenderBuilder</code>, producing a <code>FileAppender</code>.\nCreates a new <code>FileAppender</code> builder.\nSets the output encoder for the <code>FileAppender</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation about the active log file.\nAn appender which archives log files in a configurable …\nA builder for the <code>RollingFileAppender</code>.\nConfiguration for the rolling file appender.\nA deserializer for the <code>RollingFileAppender</code>.\nDetermines if the appender will append to or truncate the …\nConstructs a <code>RollingFileAppender</code>. The path argument can …\nCreates a new <code>RollingFileAppenderBuilder</code>.\nSets the encoder used by the appender.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an estimate of the log file’s current size.\nReturns an estimate of the log file’s current size.\nReturns the path to the log file.\nPolicies.\nTriggers the log file to roll over.\nA trait implementing a rolling policy for a …\nThe compound rolling policy.\nReturn the config <code>Trigger.is_pre_process</code> value\nRolls the current log file, if necessary.\nA rolling policy which delegates to a “trigger” and “…\nConfiguration for the compound policy.\nA deserializer for the <code>CompoundPolicyDeserializer</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>CompoundPolicy</code>.\nRollers\nTriggers\nA trait which processes log files after they have been …\nThe delete roller.\nThe fixed-window roller.\nProcesses the log file.\nA roller which deletes the log file.\nConfiguration for the delete roller.\nA deserializer for the <code>DeleteRoller</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>DeleteRoller</code>.\nA roller which maintains a fixed window of archived log …\nA builder for the <code>FixedWindowRoller</code>.\nConfiguration for the fixed window roller.\nA deserializer for the <code>FixedWindowRoller</code>.\nSets the base index for archived log files.\nConstructs a new <code>FixedWindowRoller</code>.\nReturns a new builder for the <code>FixedWindowRoller</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA trait which identifies if the active log file should be …\nSets the is_pre_process flag for log files.\nThe size trigger.\nThe time trigger.\nDetermines if the active log file should be rolled over.\nA trigger which rolls the log once it has passed a certain …\nConfiguration for the size trigger.\nA deserializer for the <code>SizeTrigger</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new trigger which rolls the log once it has …\nTimeTriger in day(s).\nTimeTriger in hour(s).\nTimeTriger in minute(s).\nTimeTriger in month(s).\nTimeTriger in second(s).\nA trigger which rolls the log once it has passed a certain …\nConfiguration for the time trigger.\nThe TimeTrigger supports the following units (case …\nTimeTriger in week(s).\nTimeTriger in year(s).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new trigger which rolls the log once it has …\nThere was an error building the handle.\nThis deserializer’s configuration.\nA trait implemented by traits which are deserializable.\nA trait for objects that can deserialize log4rs components …\nA container of <code>Deserialize</code>rs.\nThere was an error deserializing.\nThe various types of formatting errors that can be …\nErrors found when initializing.\nThe JSON feature flag was missing.\nA raw deserializable log4rs configuration.\nThere was an error setting the global logger.\nThe TOML feature flag was missing.\nThe trait that this deserializer will create.\nLog4rs could not determine the file format.\nAn unsupported format was specified.\nThe YAML feature flag was missing.\nReturns the appenders.\nCreate a log4rs logger using the provided raw config.\nCreate a new trait object based on the provided config.\nDeserializes a value of a specific type and kind.\nCreates a new <code>Deserializers</code> with no mappings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the global logger as a log4rs logger with the …\nInitializes the global logger as a log4rs logger with the …\nInitializes the global logger as a log4rs logger …\nInitializes the global logger as a log4rs logger using the …\nAdds a mapping from the specified <code>kind</code> to a deserializer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a log4rs logger configuration from a file.\nReturns the loggers.\nReturns a name for objects implementing the trait suitable …\nCreates a <code>Deserializers</code> with default mappings.\nReturns the requested refresh rate.\nReturns the root.\nlog4rs configuration\nConfiguration for an appender.\nA builder for <code>Appender</code>s.\nA log4rs configuration.\nA builder for <code>Config</code>s.\nAn error validating a log4rs <code>Config</code>.\nErrors encountered when validating a log4rs <code>Config</code>.\nMultiple appenders were registered with the same name.\nMultiple loggers were registered with the same name.\nA logger name was invalid.\nConfiguration for a logger.\nA builder for <code>Logger</code>s.\nA reference to a nonexistant appender.\nConfiguration for the root logger.\nA builder for <code>Root</code>s.\nDetermines if appenders of parent loggers will also be …\nSets the additivity of the logger.\nAdds an appender.\nAdds an appender.\nReturns the appender.\nAdds an appender.\nReturns the <code>Appender</code>s associated with the <code>Config</code>.\nAdds appenders.\nReturns the list of names of appenders that will be …\nAdds appenders.\nReturns the list of names of appenders that will be …\nAdds appenders.\nConsumes the <code>ConfigBuilder</code>, returning the <code>Config</code>.\nConsumes the <code>RootBuilder</code>, returning the <code>Root</code>.\nConsumes the <code>AppenderBuilder</code>, returning the <code>Appender</code>.\nConsumes the <code>LoggerBuilder</code>, returning the <code>Logger</code>.\nConsumes the <code>ConfigBuilder</code>, returning the <code>Config</code>.\nCreates a new <code>ConfigBuilder</code>.\nCreates a new <code>RootBuilder</code> with no appenders.\nCreates a new <code>AppenderBuilder</code> with the specified name and …\nCreates a new <code>LoggerBuilder</code> with the specified name and …\nReturns a slice of <code>Error</code>s.\nAdds a filter.\nReturns the filters attached to the appender.\nAdds filters.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandle non-fatal errors (by logging them to stderr.)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThere were no config errors.\nReturns the minimum level of log messages that the root …\nReturns the minimum level of log messages that the logger …\nAdds a logger.\nReturns the <code>Logger</code>s associated with the <code>Config</code>.\nAdds loggers.\nReturns the name of the appender.\nReturns the name of the logger.\nReturns the <code>Root</code> associated with the <code>Config</code>.\nReturns a mutable handle for the <code>Root</code> associated with the …\nSets the minimum level of log messages that the root …\nA text or background color.\nA trait implemented by types that can serialize a <code>Record</code> …\nConfiguration for an encoder.\nThe style applied to text output.\nA trait for types that an <code>Encode</code>r will write to.\nSets the background color.\nThe background color.\nThe encoder’s configuration.\nEncodes the <code>Record</code> into bytes and writes them.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the text intensity.\nTrue if the text should have increased intensity.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn encoder which writes a JSON object.\nThe encoder’s kind.\nReturns a <code>Style</code> with all fields set to their defaults.\nA simple pattern-based encoder.\nSets the output text style, if supported.\nSets the text color.\nThe text (or foreground) color.\nImplementations of the <code>encode::Write</code> trait.\nAn <code>Encode</code>r which writes a JSON object.\nThe JSON encoder’s configuration\nA deserializer for the <code>JsonEncoder</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>JsonEncoder</code> with a default configuration.\nAn <code>Encode</code>r configured via a format string.\nThe pattern encoder’s configuration.\nA deserializer for the <code>PatternEncoder</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>PatternEncoder</code> from a pattern string.\nThe ANSI writer.\nThe console writer\nThe simple writer\nAn <code>encode::Write</code>r that wraps an <code>io::Write</code>r, emitting ANSI …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nForce color output\nPrint color only if the output is recognized as a console\nThe color output mode for a <code>ConsoleAppender</code>\nAn <code>encode::Write</code>r that outputs to a console.\nAn RAII lock over a console.\nNever print color\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocks the console, preventing other threads from writing …\nReturns a new <code>ConsoleWriter</code> that will write to standard …\nReturns a new <code>ConsoleWriter</code> that will write to standard …\nAn <code>encode::Write</code>r that simply delegates to an <code>io::Write</code>r …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAccept the log event.\nThe trait implemented by log4rs filters.\nConfiguration for a filter.\nTake no action on the log event.\nReject the log event.\nThe response returned by a filter.\nThe filter configuration.\nFilters a log event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe filter kind.\nThe threshold filter.\nA filter that rejects all events at a level below a …\nThe threshold filter’s configuration.\nA deserializer for the <code>ThresholdFilter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ThresholdFilter</code> with the specified threshold.")